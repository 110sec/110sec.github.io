{
    "title": "火星数字",
    "detail": "火星人是以 13 进制计数的：\r\n\r\n- 地球人的 0 被火星人称为 tret。\r\n- 地球人数字 1 到 12 的火星文分别为：jan, feb, mar, apr, may, jun, jly, aug, sep, oct, nov, dec。\r\n- 火星人将进位以后的 12 个高位数字分别称为：tam, hel, maa, huh, tou, kes, hei, elo, syy, lok, mer, jou。\r\n\r\n例如地球人的数字 29翻译成火星文就是 hel mar；而火星文 elo nov 对应地球数字 115。为了方便交流，请你编写程序实现地球和火星数字之间的互译。\r\n\r\n### 输入格式：\r\n\r\n输入第一行给出一个正整数 N（< 100），随后 N 行，每行给出一个 [0, 169) 区间内的数字 —— 或者是地球文，或者是火星文。\r\n\r\n### 输出格式：\r\n\r\n对应输入的每一行，在一行中输出翻译后的另一种语言的数字。\r\n\r\n### 输入样例：\r\n```in\r\n4\r\n29\r\n5\r\nelo nov\r\ntam\r\n```\r\n\r\n### 输出样例：\r\n```out\r\nhel mar\r\nmay\r\n115\r\n13\r\n```\r\n",
    "grade": 0,
    "difficulty": 1,
    "idea": "因为给出的可能是数字（地球文）也有可能是字母（火星文），所以用字符串s保存每一次的输入，因为如果是火星文则会出现空格，所以用getline接收一行的输入～计算string s的长度len，判断s[0]是否是数字，如果是数字，表示是地球文，则需要转为火星文，执行func1()；如果不是数字，则说明是火星文，需要转为地球文，执行func2()；\r\n\r\nfunc1(int t)中，传入的值是string转int后的结果stoi(s)，因为数字最大不超过168，所以最多只会输出两位火星文，如果t / 13不等于0，说明有高位，所以输出b[t/13]；如果输出了高位（t/13不等于0）并且t % 13不等于0，说明有高位且有低位，所以此时输出空格；如果t % 13不等于0，说明有低位，此时输出a[t % 13]；注意，还有个数字0没有考虑，因为数字0取余13等于0，但是要特别输出tret，所以在func1的最后一句判断中加一句t == 0，并将a[0]位赋值成tret即可解决0的问题～\r\n\r\nfunc2()中，t1和t2一开始都赋值0，s1和s2用来分离火星文单词，因为火星文字符串只可能一个单词或者两个单词，而且一个单词不会超过4，所以先将一个单词的赋值给s1，即s1 = s.substr(0, 3)；如果len > 4，就将剩下的一个单词赋值给s2，即s2 = s.substr(4, 3)；然后下标j从1到12遍历a和b两个数组，如果a数组中有和s1或者s2相等的，说明低位等于j，则将j赋值给t2；如果b数组中有和s1相等的（b数组不会和s2相等，因为如果有两个单词，s2只可能是低位），说明高位有值，将j赋值给t1，最后输出t1 * 13 + t2即可～",
    "answer": "### C++\r\n```cpp\r\n#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\nstring a[13] = {\"tret\", \"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jly\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"};\r\nstring b[13] = {\"####\", \"tam\", \"hel\", \"maa\", \"huh\", \"tou\", \"kes\", \"hei\", \"elo\", \"syy\", \"lok\", \"mer\", \"jou\"};\r\nstring s;\r\nint len;\r\nvoid func1(int t) {\r\n    if (t / 13) cout << b[t / 13];\r\n    if ((t / 13) && (t % 13)) cout << \" \";\r\n    if (t % 13 || t == 0) cout << a[t % 13];\r\n}\r\nvoid func2() {\r\n    int t1 = 0, t2 = 0;\r\n    string s1 = s.substr(0, 3), s2;\r\n    if (len > 4) s2 = s.substr(4, 3);\r\n    for (int j = 1; j <= 12; j++) {\r\n        if (s1 == a[j] || s2 == a[j]) t2 = j;\r\n        if (s1 == b[j]) t1 = j;\r\n    }\r\n    cout << t1 * 13 + t2;\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    getchar();\r\n    for (int i = 0; i < n; i++) {\r\n        getline(cin, s);\r\n        len = s.length();\r\n        if (s[0] >= '0' && s[0] <= '9')\r\n            func1(stoi(s));\r\n        else\r\n            func2();\r\n        cout << endl;\r\n    }\r\n    return 0;\r\n}#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\nstring a[13] = {\"tret\", \"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jly\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"};\r\nstring b[13] = {\"####\", \"tam\", \"hel\", \"maa\", \"huh\", \"tou\", \"kes\", \"hei\", \"elo\", \"syy\", \"lok\", \"mer\", \"jou\"};\r\nstring s;\r\nint len;\r\nvoid func1(int t) {\r\n    if (t / 13) cout << b[t / 13];\r\n    if ((t / 13) && (t % 13)) cout << \" \";\r\n    if (t % 13 || t == 0) cout << a[t % 13];\r\n}\r\nvoid func2() {\r\n    int t1 = 0, t2 = 0;\r\n    string s1 = s.substr(0, 3), s2;\r\n    if (len > 4) s2 = s.substr(4, 3);\r\n    for (int j = 1; j <= 12; j++) {\r\n        if (s1 == a[j] || s2 == a[j]) t2 = j;\r\n        if (s1 == b[j]) t1 = j;\r\n    }\r\n    cout << t1 * 13 + t2;\r\n}\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    getchar();\r\n    for (int i = 0; i < n; i++) {\r\n        getline(cin, s);\r\n        len = s.length();\r\n        if (s[0] >= '0' && s[0] <= '9')\r\n            func1(stoi(s));\r\n        else\r\n            func2();\r\n        cout << endl;\r\n    }\r\n    return 0;\r\n}\r\n```"
  }