{
    "title": "在霍格沃茨找零钱",
    "detail": "如果你是哈利·波特迷，你会知道魔法世界有它自己的货币系统 —— 就如海格告诉哈利的：“十七个银西可(Sickle)兑一个加隆(Galleon)，二十九个纳特(Knut)兑一个西可，很容易。”现在，给定哈利应付的价钱P和他实付的钱A，你的任务是写一个程序来计算他应该被找的零钱。\r\n\r\n### 输入格式：\r\n\r\n输入在1行中分别给出P和A，格式为“Galleon.Sickle.Knut”，其间用1个空格分隔。这里Galleon是[0, 10^7]区间内的整数，Sickle是[0, 17)区间内的整数，Knut是[0, 29)区间内的整数。\r\n\r\n### 输出格式：\r\n\r\n在一行中用与输入同样的格式输出哈利应该被找的零钱。如果他没带够钱，那么输出的应该是负数。\r\n\r\n### 输入样例 1：\r\n```in\r\n10.16.27 14.1.28\r\n```\r\n\r\n### 输出样例 1：\r\n```out\r\n3.2.1\r\n```\r\n\r\n### 输入样例 2：\r\n```in\r\n14.1.28 10.16.27\r\n```\r\n\r\n### 输出样例 2：\r\n```out\r\n-3.2.1\r\n```\r\n",
    "grade": 0,
    "difficulty": 0,
    "idea": "首先先都换算成单位为Knut的，然后再计算即可，注意下为负的情况要用P减去A，然后如果P与A相等，则输出0.0.0。",
    "answer": "### C++\r\n```cpp\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    long long priceG, priceS, priceK, payG, payS, payK;\r\n    scanf(\"%lld.%lld.%lld %lld.%lld.%lld\", &priceG, &priceS, &priceK, &payG, &payS, &payK);\r\n    long long priceSum = priceG * 17 * 29 + priceS * 29 + priceK;\r\n    long long paySum = payG * 17 * 29 + payS * 29 + payK;\r\n    if(priceSum > paySum){\r\n        printf(\"-\");\r\n        long long changeSum = priceSum - paySum;\r\n        long long changeG = changeSum / (17 * 29);\r\n        changeSum -= changeG * 17 * 29;\r\n        long long changeS = changeSum / 29;\r\n        changeSum -= changeS * 29;\r\n        long long changeK = changeSum;\r\n        printf(\"%lld.%lld.%lld\\n\", changeG, changeS, changeK);\r\n    }\r\n    else if(priceSum == paySum){\r\n        printf(\"0.0.0\\n\");\r\n    }\r\n    else{\r\n        long long changeSum = paySum - priceSum;\r\n        long long changeG = changeSum / (17 * 29);\r\n        changeSum -= changeG * 17 * 29;\r\n        long long changeS = changeSum / 29;\r\n        changeSum -= changeS * 29;\r\n        long long changeK = changeSum;\r\n        printf(\"%lld.%lld.%lld\\n\", changeG, changeS, changeK);\r\n    }\r\n    return 0;\r\n}\r\n```"
}